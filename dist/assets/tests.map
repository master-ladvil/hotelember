{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","embu/tests/helpers/index.js","embu/tests/test-helper.js","embu/tests/unit/controllers/logins-test.js","embu/tests/unit/controllers/register-test.js","embu/tests/unit/controllers/roomselect-test.js","embu/tests/unit/controllers/route-test.js","embu/tests/unit/routes/error-test.js","embu/tests/unit/routes/index-test.js","embu/tests/unit/routes/logins-test.js","embu/tests/unit/routes/logins/testt-test.js","embu/tests/unit/routes/not-found-test.js","embu/tests/unit/routes/register-test.js","embu/tests/unit/routes/roomselect-test.js","embu/tests/unit/routes/succcess-test.js","embu/tests/unit/serializers/post-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"embu/tests/helpers/index\", [\"exports\", \"ember-qunit\"], function (_exports, _emberQunit) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.setupApplicationTest = setupApplicationTest;\n  _exports.setupRenderingTest = setupRenderingTest;\n  _exports.setupTest = setupTest;\n  0; //eaimeta@70e063a35619d71f0,\"ember-qunit\"eaimeta@70e063a35619d71f\n\n  // This file exists to provide wrappers around ember-qunit's / ember-mocha's\n  // test setup functions. This way, you can easily extend the setup that is\n  // needed per test type.\n  function setupApplicationTest(hooks, options) {\n    (0, _emberQunit.setupApplicationTest)(hooks, options); // Additional setup for application tests can be done here.\n    //\n    // For example, if you need an authenticated session for each\n    // application test, you could do:\n    //\n    // hooks.beforeEach(async function () {\n    //   await authenticateSession(); // ember-simple-auth\n    // });\n    //\n    // This is also a good place to call test setup functions coming\n    // from other addons:\n    //\n    // setupIntl(hooks); // ember-intl\n    // setupMirage(hooks); // ember-cli-mirage\n  }\n\n  function setupRenderingTest(hooks, options) {\n    (0, _emberQunit.setupRenderingTest)(hooks, options); // Additional setup for rendering tests can be done here.\n  }\n\n  function setupTest(hooks, options) {\n    (0, _emberQunit.setupTest)(hooks, options); // Additional setup for unit tests can be done here.\n  }\n});","define(\"embu/tests/test-helper\", [\"embu/app\", \"embu/config/environment\", \"qunit\", \"@ember/test-helpers\", \"qunit-dom\", \"ember-qunit\"], function (_app, _environment, QUnit, _testHelpers, _qunitDom, _emberQunit) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"embu/app\",0,\"embu/config/environment\",0,\"qunit\",0,\"@ember/test-helpers\",0,\"qunit-dom\",0,\"ember-qunit\"eaimeta@70e063a35619d71f\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _qunitDom.setup)(QUnit.assert);\n  (0, _emberQunit.start)();\n});","define(\"embu/tests/unit/controllers/logins-test\", [\"qunit\", \"embu/tests/helpers\"], function (_qunit, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"embu/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Controller | logins', function (hooks) {\n    (0, _helpers.setupTest)(hooks); // TODO: Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:logins');\n      assert.ok(controller);\n    });\n  });\n});","define(\"embu/tests/unit/controllers/register-test\", [\"qunit\", \"embu/tests/helpers\"], function (_qunit, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"embu/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Controller | register', function (hooks) {\n    (0, _helpers.setupTest)(hooks); // TODO: Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:register');\n      assert.ok(controller);\n    });\n  });\n});","define(\"embu/tests/unit/controllers/roomselect-test\", [\"qunit\", \"embu/tests/helpers\"], function (_qunit, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"embu/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Controller | roomselect', function (hooks) {\n    (0, _helpers.setupTest)(hooks); // TODO: Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:roomselect');\n      assert.ok(controller);\n    });\n  });\n});","define(\"embu/tests/unit/controllers/route-test\", [\"qunit\", \"embu/tests/helpers\"], function (_qunit, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"embu/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Controller | route', function (hooks) {\n    (0, _helpers.setupTest)(hooks); // TODO: Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:route');\n      assert.ok(controller);\n    });\n  });\n});","define(\"embu/tests/unit/routes/error-test\", [\"qunit\", \"embu/tests/helpers\"], function (_qunit, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"embu/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Route | error', function (hooks) {\n    (0, _helpers.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:error');\n      assert.ok(route);\n    });\n  });\n});","define(\"embu/tests/unit/routes/index-test\", [\"qunit\", \"embu/tests/helpers\"], function (_qunit, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"embu/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Route | index', function (hooks) {\n    (0, _helpers.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:index');\n      assert.ok(route);\n    });\n  });\n});","define(\"embu/tests/unit/routes/logins-test\", [\"qunit\", \"embu/tests/helpers\"], function (_qunit, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"embu/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Route | logins', function (hooks) {\n    (0, _helpers.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:logins');\n      assert.ok(route);\n    });\n  });\n});","define(\"embu/tests/unit/routes/logins/testt-test\", [\"qunit\", \"embu/tests/helpers\"], function (_qunit, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"embu/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Route | logins/testt', function (hooks) {\n    (0, _helpers.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:logins/testt');\n      assert.ok(route);\n    });\n  });\n});","define(\"embu/tests/unit/routes/not-found-test\", [\"qunit\", \"embu/tests/helpers\"], function (_qunit, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"embu/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Route | not-found', function (hooks) {\n    (0, _helpers.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:not-found');\n      assert.ok(route);\n    });\n  });\n});","define(\"embu/tests/unit/routes/register-test\", [\"qunit\", \"embu/tests/helpers\"], function (_qunit, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"embu/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Route | register', function (hooks) {\n    (0, _helpers.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:register');\n      assert.ok(route);\n    });\n  });\n});","define(\"embu/tests/unit/routes/roomselect-test\", [\"qunit\", \"embu/tests/helpers\"], function (_qunit, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"embu/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Route | roomselect', function (hooks) {\n    (0, _helpers.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:roomselect');\n      assert.ok(route);\n    });\n  });\n});","define(\"embu/tests/unit/routes/succcess-test\", [\"qunit\", \"embu/tests/helpers\"], function (_qunit, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"embu/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Route | succcess', function (hooks) {\n    (0, _helpers.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:succcess');\n      assert.ok(route);\n    });\n  });\n});","define(\"embu/tests/unit/serializers/post-test\", [\"qunit\", \"embu/tests/helpers\"], function (_qunit, _helpers) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"embu/tests/helpers\"eaimeta@70e063a35619d71f\n\n  (0, _qunit.module)('Unit | Serializer | post', function (hooks) {\n    (0, _helpers.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let serializer = store.serializerFor('post');\n      assert.ok(serializer);\n    });\n    (0, _qunit.test)('it serializes records', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let record = store.createRecord('post', {});\n      let serializedRecord = record.serialize();\n      assert.ok(serializedRecord);\n    });\n  });\n});","define('embu/config/environment', [], function() {\n  var prefix = 'embu';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('embu/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}